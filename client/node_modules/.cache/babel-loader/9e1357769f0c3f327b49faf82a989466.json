{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nbens\\\\Google-Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nbens\\\\Google-Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nbens\\\\Google-Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nbens\\\\Google-Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nbens\\\\Google-Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nbens\\\\Google-Books\\\\client\\\\src\\\\pages\\\\searchBooks.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport savedReasult from \"../components/savedResult\";\nimport SearchResult from \"../components/SearchResult\";\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      books: [],\n      error: \"\",\n      message: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        search: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault(); // once it clicks it connects to the google book api with the search value\n\n      API.getGoogleSearchBooks(_this.state.search).then(function (res) {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          var results = res.data.items; //map through the array \n\n          results = results.map(function (result) {\n            //store each book information in a new object \n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            };\n            return result;\n          }); // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n\n          _this.setState({\n            books: results,\n            error: \"\"\n          });\n        }\n      }).catch(function (err) {\n        return _this.setState({\n          error: err.items\n        });\n      });\n    };\n\n    _this.handleSavedButton = function (event) {\n      // console.log(event)\n      event.preventDefault();\n      console.log(_this.state.books);\n\n      var savedBooks = _this.state.books.filter(function (book) {\n        return book.id === event.target.id;\n      });\n\n      savedBooks = savedBooks[0];\n      API.saveBook(savedBooks).then(_this.setState({\n        message: alert(\"Your book is saved\")\n      })).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Find Your Favorite Books with GoogleBook API\")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(SearchResult, {\n        books: this.state.books,\n        handleSavedButton: this.handleSavedButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["C:/Users/nbens/Google-Books/client/src/pages/searchBooks.js"],"names":["React","Component","API","Jumbotron","Container","Row","Col","savedReasult","SearchResult","SearchBooks","state","search","books","error","message","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getGoogleSearchBooks","then","res","data","items","Error","results","map","result","key","id","title","volumeInfo","author","authors","description","image","imageLinks","thumbnail","link","infoLink","catch","err","handleSavedButton","console","log","savedBooks","filter","book","saveBook","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport savedReasult from \"../components/savedResult\";\nimport SearchResult from \"../components/SearchResult\"\n\n\nclass SearchBooks extends Component {\n  //create state\n  state = {\n    search: \"\",\n    books: [],\n    error: \"\",\n    message: \"\"\n  };\n\n  //function to take value of what enter in the search bar\n  handleInputChange = event => {\n    this.setState({ search: event.target.value })\n  }\n\n  //function to control the submit button of the search form \n  handleFormSubmit = event => {\n    event.preventDefault();\n    // once it clicks it connects to the google book api with the search value\n    API.getGoogleSearchBooks(this.state.search)\n      .then(res => {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        }\n        else {\n          // store response in a array\n          let results = res.data.items\n          //map through the array \n          results = results.map(result => {\n            //store each book information in a new object \n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            }\n            return result;\n          })\n          // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n          this.setState({ books: results, error: \"\" })\n        }\n      })\n      .catch(err => this.setState({ error: err.items }));\n  }\n\n  handleSavedButton = event => {\n    // console.log(event)\n    event.preventDefault();\n    console.log(this.state.books)\n    let savedBooks = this.state.books.filter(book => book.id === event.target.id)\n    savedBooks = savedBooks[0];\n    API.saveBook(savedBooks)\n      .then(this.setState({ message: alert(\"Your book is saved\") }))\n      .catch(err => console.log(err))\n  }\n  render() {\n    return (\n      <Container fluid>\n        <Jumbotron>\n          <h1 className=\"text-white\">Find Your Favorite Books with GoogleBook API</h1>\n        </Jumbotron>\n        <Container>\n          <Row>\n            <Col size=\"12\">\n              <SearchForm\n                handleFormSubmit={this.handleFormSubmit}\n                handleInputChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <br></br>\n        <Container>\n          <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\n        </Container>\n      </Container>\n    )\n  }\n\n\n}\n\nexport default SearchBooks\n"]},"metadata":{},"sourceType":"module"}